#Used for Postgresql connection
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.show-sql=true

spring.datasource.initialization-mode=always
spring.datasource.continue-on-error=true
spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
spring.datasource.removeAbandoned=true

#Following commented code was used for local postgresql whilst testing
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=
#spring.datasource.password=

#drop n create table again, good for testing
#spring.jpa.hibernate.ddl-auto=create

#spring.jpa.show-sql=true
#spring.jpa.database=POSTGRESQL
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Enable rest fro /api path
Spring.data.rest.base-path=/api

#used in the customer error page to provide stacktrace
server.error.include-stacktrace=always

#The following is used with the actuator to specify endpoints and app info. Endpoints set to all but can be customised
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true


management.endpoint.health.show-details=always

info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Logging
logging.file=app.log
